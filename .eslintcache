[{"C:\\Users\\gizem.ay\\Documents\\Projects\\personal\\wa-app\\src\\index.js":"1","C:\\Users\\gizem.ay\\Documents\\Projects\\personal\\wa-app\\src\\serviceWorker.js":"2","C:\\Users\\gizem.ay\\Documents\\Projects\\personal\\wa-app\\src\\i18n.js":"3","C:\\Users\\gizem.ay\\Documents\\Projects\\personal\\wa-app\\src\\contexts\\UserContext.js":"4","C:\\Users\\gizem.ay\\Documents\\Projects\\personal\\wa-app\\src\\app\\App.js":"5","C:\\Users\\gizem.ay\\Documents\\Projects\\personal\\wa-app\\src\\app\\AppRoutes.js":"6","C:\\Users\\gizem.ay\\Documents\\Projects\\personal\\wa-app\\src\\app\\shared\\Footer.js":"7","C:\\Users\\gizem.ay\\Documents\\Projects\\personal\\wa-app\\src\\app\\shared\\Navbar.js":"8","C:\\Users\\gizem.ay\\Documents\\Projects\\personal\\wa-app\\src\\app\\shared\\Sidebar.js":"9","C:\\Users\\gizem.ay\\Documents\\Projects\\personal\\wa-app\\src\\app\\shared\\Spinner.js":"10","C:\\Users\\gizem.ay\\Documents\\Projects\\personal\\wa-app\\src\\app\\basic-ui\\Buttons.js":"11","C:\\Users\\gizem.ay\\Documents\\Projects\\personal\\wa-app\\src\\app\\error-pages\\Error404.js":"12","C:\\Users\\gizem.ay\\Documents\\Projects\\personal\\wa-app\\src\\app\\dashboard\\Dashboard.js":"13","C:\\Users\\gizem.ay\\Documents\\Projects\\personal\\wa-app\\src\\app\\basic-ui\\Dropdowns.js":"14","C:\\Users\\gizem.ay\\Documents\\Projects\\personal\\wa-app\\src\\app\\error-pages\\Error500.js":"15","C:\\Users\\gizem.ay\\Documents\\Projects\\personal\\wa-app\\src\\app\\user-pages\\Login.js":"16","C:\\Users\\gizem.ay\\Documents\\Projects\\personal\\wa-app\\src\\app\\basic-ui\\Typography.js":"17","C:\\Users\\gizem.ay\\Documents\\Projects\\personal\\wa-app\\src\\app\\tables\\BasicTable.js":"18","C:\\Users\\gizem.ay\\Documents\\Projects\\personal\\wa-app\\src\\app\\charts\\ChartJs.js":"19","C:\\Users\\gizem.ay\\Documents\\Projects\\personal\\wa-app\\src\\app\\user-pages\\Register.js":"20","C:\\Users\\gizem.ay\\Documents\\Projects\\personal\\wa-app\\src\\app\\form-elements\\BasicElements.js":"21","C:\\Users\\gizem.ay\\Documents\\Projects\\personal\\wa-app\\src\\app\\icons\\Mdi.js":"22","C:\\Users\\gizem.ay\\Documents\\Projects\\personal\\wa-app\\src\\app\\pages\\WorkItems.js":"23","C:\\Users\\gizem.ay\\Documents\\Projects\\personal\\wa-app\\src\\services\\user.service.js":"24","C:\\Users\\gizem.ay\\Documents\\Projects\\personal\\wa-app\\src\\assets\\validations\\loginValidation.js":"25","C:\\Users\\gizem.ay\\Documents\\Projects\\personal\\wa-app\\src\\app\\apps\\TodoList.js":"26","C:\\Users\\gizem.ay\\Documents\\Projects\\personal\\wa-app\\src\\services\\works.service.js":"27","C:\\Users\\gizem.ay\\Documents\\Projects\\personal\\wa-app\\src\\app\\components\\partial\\DeleteConfirmation.js":"28","C:\\Users\\gizem.ay\\Documents\\Projects\\personal\\wa-app\\src\\app\\components\\modals\\DocsModal.js":"29","C:\\Users\\gizem.ay\\Documents\\Projects\\personal\\wa-app\\src\\app\\components\\modals\\CreateWork.js":"30","C:\\Users\\gizem.ay\\Documents\\Projects\\personal\\wa-app\\src\\services\\common.service.js":"31","C:\\Users\\gizem.ay\\Documents\\Projects\\personal\\wa-app\\src\\assets\\validations\\createWorkValidation.js":"32","C:\\Users\\gizem.ay\\Documents\\Projects\\personal\\wa-app\\src\\services\\fileService.js":"33"},{"size":440,"mtime":1639053006767,"results":"34","hashOfConfig":"35"},{"size":4951,"mtime":1607429281000,"results":"36","hashOfConfig":"35"},{"size":13438,"mtime":1607429281000,"results":"37","hashOfConfig":"35"},{"size":639,"mtime":1638733418710,"results":"38","hashOfConfig":"35"},{"size":2348,"mtime":1607429281000,"results":"39","hashOfConfig":"35"},{"size":2117,"mtime":1636297140683,"results":"40","hashOfConfig":"35"},{"size":885,"mtime":1607429281000,"results":"41","hashOfConfig":"35"},{"size":9415,"mtime":1636306070565,"results":"42","hashOfConfig":"35"},{"size":14655,"mtime":1636306515194,"results":"43","hashOfConfig":"35"},{"size":267,"mtime":1607429281000,"results":"44","hashOfConfig":"35"},{"size":27934,"mtime":1607429281000,"results":"45","hashOfConfig":"35"},{"size":1195,"mtime":1607429281000,"results":"46","hashOfConfig":"35"},{"size":34421,"mtime":1607429281000,"results":"47","hashOfConfig":"35"},{"size":31327,"mtime":1607429281000,"results":"48","hashOfConfig":"35"},{"size":1172,"mtime":1607429281000,"results":"49","hashOfConfig":"35"},{"size":3682,"mtime":1638734046587,"results":"50","hashOfConfig":"35"},{"size":18450,"mtime":1607429281000,"results":"51","hashOfConfig":"35"},{"size":18106,"mtime":1607429281000,"results":"52","hashOfConfig":"35"},{"size":8408,"mtime":1607429281000,"results":"53","hashOfConfig":"35"},{"size":2829,"mtime":1607429281000,"results":"54","hashOfConfig":"35"},{"size":32466,"mtime":1607429281000,"results":"55","hashOfConfig":"35"},{"size":268345,"mtime":1607429281000,"results":"56","hashOfConfig":"35"},{"size":29756,"mtime":1639055242125,"results":"57","hashOfConfig":"35"},{"size":1267,"mtime":1636194597516,"results":"58","hashOfConfig":"35"},{"size":422,"mtime":1635096698038,"results":"59","hashOfConfig":"35"},{"size":5315,"mtime":1607429281000,"results":"60","hashOfConfig":"35"},{"size":2630,"mtime":1638001663787,"results":"61","hashOfConfig":"35"},{"size":668,"mtime":1638734526542,"results":"62","hashOfConfig":"35"},{"size":14318,"mtime":1638737883669,"results":"63","hashOfConfig":"35"},{"size":12514,"mtime":1638738486999,"results":"64","hashOfConfig":"35"},{"size":486,"mtime":1634744715539,"results":"65","hashOfConfig":"35"},{"size":297,"mtime":1634744715523,"results":"66","hashOfConfig":"35"},{"size":776,"mtime":1636194597516,"results":"67","hashOfConfig":"35"},{"filePath":"68","messages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"xxc5mq",{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"76","messages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"96","messages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"98","messages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"100","messages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"102","messages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"104","messages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"106","messages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"108","messages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"110","messages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"112","messages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"114","messages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"116","messages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"118","messages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"120","messages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"122","messages":"123","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"125","messages":"126","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"124"},{"filePath":"128","messages":"129","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"124"},{"filePath":"131","messages":"132","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"133","messages":"134","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"135","messages":"136","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\gizem.ay\\Documents\\Projects\\personal\\wa-app\\src\\index.js",[],"C:\\Users\\gizem.ay\\Documents\\Projects\\personal\\wa-app\\src\\serviceWorker.js",[],"C:\\Users\\gizem.ay\\Documents\\Projects\\personal\\wa-app\\src\\i18n.js",[],"C:\\Users\\gizem.ay\\Documents\\Projects\\personal\\wa-app\\src\\contexts\\UserContext.js",["137"],"C:\\Users\\gizem.ay\\Documents\\Projects\\personal\\wa-app\\src\\app\\App.js",[],"C:\\Users\\gizem.ay\\Documents\\Projects\\personal\\wa-app\\src\\app\\AppRoutes.js",[],"C:\\Users\\gizem.ay\\Documents\\Projects\\personal\\wa-app\\src\\app\\shared\\Footer.js",[],"C:\\Users\\gizem.ay\\Documents\\Projects\\personal\\wa-app\\src\\app\\shared\\Navbar.js",[],"C:\\Users\\gizem.ay\\Documents\\Projects\\personal\\wa-app\\src\\app\\shared\\Sidebar.js",[],"C:\\Users\\gizem.ay\\Documents\\Projects\\personal\\wa-app\\src\\app\\shared\\Spinner.js",[],"C:\\Users\\gizem.ay\\Documents\\Projects\\personal\\wa-app\\src\\app\\basic-ui\\Buttons.js",[],"C:\\Users\\gizem.ay\\Documents\\Projects\\personal\\wa-app\\src\\app\\error-pages\\Error404.js",[],"C:\\Users\\gizem.ay\\Documents\\Projects\\personal\\wa-app\\src\\app\\dashboard\\Dashboard.js",[],"C:\\Users\\gizem.ay\\Documents\\Projects\\personal\\wa-app\\src\\app\\basic-ui\\Dropdowns.js",[],"C:\\Users\\gizem.ay\\Documents\\Projects\\personal\\wa-app\\src\\app\\error-pages\\Error500.js",[],"C:\\Users\\gizem.ay\\Documents\\Projects\\personal\\wa-app\\src\\app\\user-pages\\Login.js",["138","139"],"C:\\Users\\gizem.ay\\Documents\\Projects\\personal\\wa-app\\src\\app\\basic-ui\\Typography.js",[],"C:\\Users\\gizem.ay\\Documents\\Projects\\personal\\wa-app\\src\\app\\tables\\BasicTable.js",[],"C:\\Users\\gizem.ay\\Documents\\Projects\\personal\\wa-app\\src\\app\\charts\\ChartJs.js",[],"C:\\Users\\gizem.ay\\Documents\\Projects\\personal\\wa-app\\src\\app\\user-pages\\Register.js",[],"C:\\Users\\gizem.ay\\Documents\\Projects\\personal\\wa-app\\src\\app\\form-elements\\BasicElements.js",[],"C:\\Users\\gizem.ay\\Documents\\Projects\\personal\\wa-app\\src\\app\\icons\\Mdi.js",[],"C:\\Users\\gizem.ay\\Documents\\Projects\\personal\\wa-app\\src\\app\\pages\\WorkItems.js",["140","141","142"],"C:\\Users\\gizem.ay\\Documents\\Projects\\personal\\wa-app\\src\\services\\user.service.js",["143"],"C:\\Users\\gizem.ay\\Documents\\Projects\\personal\\wa-app\\src\\assets\\validations\\loginValidation.js",[],"C:\\Users\\gizem.ay\\Documents\\Projects\\personal\\wa-app\\src\\app\\apps\\TodoList.js",[],"C:\\Users\\gizem.ay\\Documents\\Projects\\personal\\wa-app\\src\\services\\works.service.js",[],"C:\\Users\\gizem.ay\\Documents\\Projects\\personal\\wa-app\\src\\app\\components\\partial\\DeleteConfirmation.js",[],["144","145"],"C:\\Users\\gizem.ay\\Documents\\Projects\\personal\\wa-app\\src\\app\\components\\modals\\DocsModal.js",["146","147"],"import { React, useEffect, useState } from 'react'\r\nimport {\r\n     Card, CardImg, CardBody,\r\n     Button,\r\n     CardHeader,\r\n     CardTitle,\r\n\r\n     Row,\r\n     Col,\r\n     UncontrolledAlert,\r\n     Input,\r\n     CardFooter\r\n} from 'reactstrap';\r\nimport { TabContent, TabPane, Nav, NavItem, NavLink, CardText, } from 'reactstrap';\r\nimport classnames from 'classnames';\r\nimport { deleteFileById, uploadFileToWorkItem } from '../../../services/fileService';\r\nimport { getWorkById } from '../../../services/works.service';\r\nimport { updateWork } from '../../../services/works.service'\r\n// import '../../assets/scss/black-dashboard-react/custom/_docsModal.scss'\r\n// import '../../assets/scss/black-dashboard-react/custom/general.scss'\r\n\r\n\r\nfunction DocsModal(props) {\r\n     const [workItem, setWorkItem] = useState({});\r\n     const [workNotes, setWorkNotes] = useState('');\r\n     const [loading, setLoading] = useState(true);\r\n     const [isError, setIsError] = useState(true);\r\n     const [errorMessage, setErrorMessage] = useState('');\r\n\r\n     const [activeTab, setActiveTab] = useState('1');\r\n\r\n     const toggle = tab => {\r\n          if (activeTab !== tab) setActiveTab(tab);\r\n     }\r\n\r\n     const [fileIcons] = useState({\r\n          xlsx: \"https://cdn.icon-icons.com/icons2/342/PNG/512/Excel2_35735.png\",\r\n          docx: \"https://icons.iconarchive.com/icons/blackvariant/button-ui-ms-office-2016/256/Word-2-icon.png\",\r\n          pdf: \"https://cdn-icons-png.flaticon.com/512/524/524553.png\"\r\n     })\r\n\r\n     useEffect(() => {\r\n          getFiles();\r\n     }, [], [workItem]);\r\n\r\n\r\n     useEffect(() => {\r\n          setTimeout(() => {\r\n               setErrorMessage(null);\r\n               setIsError(false)\r\n          }, 10000);\r\n     }, [isError]);\r\n\r\n\r\n     const getFiles = async () => {\r\n          await getWorkById(props.updateItem.id)\r\n               .then(res => {\r\n                    setWorkItem(res.data);\r\n                    setWorkNotes(res.data.notes);\r\n                    setLoading(false);\r\n               });\r\n          setTimeout(() => {\r\n               setErrorMessage(null);\r\n               setIsError(false)\r\n          }, 10000);\r\n     }\r\n\r\n     const deleteFile = async (fileId) => {\r\n          const item = workItem;\r\n          item.Documents.splice(item.Documents.findIndex(item => item.id === fileId), 1);\r\n          setLoading(true);\r\n          await updateWork(item, item.id)\r\n               .then(res => getFiles());\r\n          await deleteFileById(fileId)\r\n               .then(res => getFiles());\r\n     }\r\n\r\n     const upload = () => {\r\n          document.getElementById(\"selectFile\").click()\r\n     }\r\n\r\n     const fileSelectHandler = async (files) => {\r\n          setLoading(true);\r\n          let uploadedFiles = [];\r\n          for (let i = 0; i < files.length; i++) {\r\n               const res = await uploadFileToWorkItem(files[i], props.updateItem.id);\r\n\r\n               if (res && res.status === 200) {\r\n                    uploadedFiles.push(res.data[0]);\r\n               } else {\r\n                    if (res && res.data.error) {\r\n                         setIsError(true);\r\n                         setErrorMessage(res.data.data.errors[0].message);\r\n                    }\r\n               }\r\n          }\r\n\r\n          if (uploadedFiles.length > 0) {\r\n               const newDocs = [...uploadedFiles, ...workItem.Documents];\r\n               const updatedWorkItem = workItem;\r\n               updatedWorkItem.Documents = newDocs;\r\n               await updateWork(updatedWorkItem, updatedWorkItem.id)\r\n                    .then(res => { getFiles(); })\r\n          } else {\r\n               setLoading(false);\r\n          }\r\n     }\r\n\r\n     const saveWorkNotes = async () => {\r\n          setLoading(true);\r\n          const newItem = workItem;\r\n          newItem.notes = workNotes;\r\n          await updateWork(newItem, newItem.id)\r\n               .then(res => { getFiles(); })\r\n     }\r\n\r\n     return (\r\n          <div className=\"file-modal-case\">\r\n\r\n               <div>\r\n                    <Nav tabs>\r\n                         <NavItem>\r\n                              <NavLink\r\n                                   style={{ cursor: 'pointer' }}\r\n                                   className={classnames({ active: activeTab === '1' })}\r\n                                   onClick={() => { toggle('1'); }}\r\n                              >\r\n                                   Files\r\n                              </NavLink>\r\n                         </NavItem>\r\n                         <NavItem>\r\n                              <NavLink\r\n                                   style={{ cursor: 'pointer' }}\r\n                                   className={classnames({ active: activeTab === '2' })}\r\n                                   onClick={() => { toggle('2'); }}\r\n                              >\r\n                                   Notes\r\n                              </NavLink>\r\n                         </NavItem>\r\n                    </Nav>\r\n                    <TabContent activeTab={activeTab}>\r\n                         <TabPane tabId=\"1\">\r\n                              <Row className=\"mt-3\">\r\n                                   <Col sm=\"12\">\r\n                                        <Row>\r\n                                             <Col md=\"12\">\r\n                                                  <Card>\r\n                                                       <CardHeader className=\"file-modal-header\">\r\n                                                            <CardTitle tag=\"h4\" className=\"m-0\">Documents</CardTitle>\r\n                                                       </CardHeader>\r\n                                                       <CardBody>\r\n                                                            {\r\n                                                                 isError && errorMessage &&\r\n                                                                 <UncontrolledAlert color=\"info\">\r\n                                                                      <div> Some Files Could Not Be Uploaded</div>\r\n                                                                      <div>Reason: \" {errorMessage} \"</div>\r\n                                                                 </UncontrolledAlert>\r\n\r\n                                                            }\r\n\r\n                                                            {\r\n                                                                 loading &&\r\n                                                                 <div class=\"spin-wrapper\">\r\n                                                                      <div class=\"spinner\">\r\n                                                                      </div>\r\n                                                                 </div>\r\n                                                            }\r\n\r\n                                                            {\r\n                                                                 !loading && workItem.Documents && workItem.Documents?.length > 0 &&\r\n                                                                 <div key=\"upload\" className=\"d-flex mb-2 pb-3 align-items-start file-item\">\r\n                                                                      <div className=\"col-3\" style={{ color: \"white\", fontSize: \"12px\" }}>File Type</div>\r\n                                                                      <div className=\"col-6 pl-0\" style={{ color: \"white\", fontSize: \"12px\" }}>File Name</div>\r\n                                                                      <div className=\"col-5\">\r\n                                                                      </div>\r\n                                                                 </div>\r\n                                                            }\r\n\r\n                                                            {!loading &&\r\n                                                                 workItem.Documents.map((doc, ind) =>\r\n                                                                      <>\r\n                                                                           <div key={ind} className=\"d-flex mb-2 pb-3 align-items-center file-item\">\r\n                                                                                <div className=\"col-2\"><CardImg className=\"file-img\" top src={fileIcons[doc.ext?.substring(1)]} alt=\"...\" /></div>\r\n                                                                                <div className=\"col-7\" style={{ color: \"white\", fontSize: \"12px\" }}>{doc.name}</div>\r\n                                                                                <div className=\"col-5 p-0\">\r\n                                                                                     <Button target={doc.ext === '.pdf' ? '_blank' : ''} href={`https://waa-app.herokuapp.com${doc.url}`} className=\"btn-rounded mr-1\" color=\"warning\">\r\n                                                                                          <i class=\"fas fa-download m-0\"></i>\r\n                                                                                     </Button>\r\n                                                                                     <Button onClick={() => deleteFile(doc.id)} className=\"btn-rounded\" color=\"danger\">\r\n                                                                                          <i class=\"fas fa-trash-alt m-0\"></i>\r\n                                                                                     </Button>\r\n                                                                                </div>\r\n                                                                           </div>\r\n                                                                      </>\r\n                                                                 )\r\n                                                            }\r\n                                                       </CardBody>\r\n                                                       <CardFooter >\r\n                                                            <div className=\"d-flex justify-content-between\">\r\n                                                                 <Button onClick={props.closeDocModal} className=\"btn-rounded\" color=\"danger\">\r\n                                                                      Close\r\n                                                                 </Button>\r\n                                                                 <Button onClick={upload} className=\"btn-rounded\" color=\"primary\">\r\n                                                                      <i class=\"fas fa-upload\"></i> Upload\r\n                                                                 </Button>\r\n                                                                 <input id='selectFile' hidden multiple type=\"file\" onChange={(event) => fileSelectHandler(event.target.files)}\r\n                                                                      accept=\"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet, application/pdf , .pdf , application/vnd.ms-excel , .doc,.docx,application/msword,application/vnd.openxmlformats-officedocument.wordprocessingml.document\"\r\n                                                                 />\r\n                                                            </div>\r\n                                                       </CardFooter>\r\n                                                  </Card>\r\n                                             </Col>\r\n                                        </Row>\r\n                                   </Col>\r\n                              </Row>\r\n                         </TabPane>\r\n\r\n\r\n                         <TabPane tabId=\"2\">\r\n                              <Row className=\"mt-3\">\r\n                                   <Col sm=\"12\">\r\n                                        <Card>\r\n                                             <CardHeader>Enter Your Notes</CardHeader>\r\n                                             <CardBody>\r\n                                                  {\r\n                                                       loading &&\r\n                                                       <div class=\"spin-wrapper\">\r\n                                                       <div class=\"spinner\">\r\n                                                       </div>\r\n                                                  </div>\r\n                                                  }\r\n\r\n                                                  {\r\n                                                       !loading &&\r\n                                                       <>\r\n\r\n                                                            <Input\r\n                                                                 value={workNotes}\r\n                                                                 type=\"textarea\"\r\n                                                                 onChange={(event => setWorkNotes(event.target.value))}\r\n                                                                 style={{ height: \"170px\", padding: \"10px\", fontSize: \"14px\", maxHeight: \"200px\" }}\r\n                                                            ></Input>\r\n                                                            <div className=\"text-right\">\r\n                                                                 <Button disabled={workNotes === workItem.notes} onClick={saveWorkNotes} className=\"col-6 btn-sm mt-3 mb-3\" color=\"primary\">\r\n                                                                      <i class=\"fas fa-save\"></i> Save Changes\r\n                                                                 </Button>\r\n                                                            </div>\r\n\r\n                                                       </>\r\n                                                  }\r\n                                             </CardBody>\r\n\r\n                                        </Card>\r\n                                   </Col>\r\n                              </Row>\r\n                         </TabPane>\r\n                    </TabContent>\r\n\r\n\r\n               </div>\r\n\r\n\r\n          </div>\r\n     )\r\n}\r\n\r\nexport default DocsModal;\r\n","C:\\Users\\gizem.ay\\Documents\\Projects\\personal\\wa-app\\src\\app\\components\\modals\\CreateWork.js",["148"],"import React, { useState, useEffect } from 'react';\r\nimport { useFormik } from 'formik';\r\n\r\nimport { createWork, updateWork } from '../../../services/works.service'\r\n\r\nimport createWorkValidationShema from \"../../../assets/validations/createWorkValidation\";\r\n// import '../../assets/scss/black-dashboard-react/custom/createWork.scss'\r\n\r\nimport {\r\n     FormGroup,\r\n     Label,\r\n     Input,\r\n     Button,\r\n     Card,\r\n     CardBody\r\n} from \"reactstrap\";\r\n\r\n\r\nfunction CreateWork(props) {\r\n\r\n     const [loading, setLoading] = useState(true);\r\n     const [itemForUpdate] = useState(props.updateItem);\r\n\r\n     const [environments, setEnvironment] = useState({\r\n          dev: itemForUpdate ? itemForUpdate.dev : {\r\n               active: false,\r\n               date: `${new Date().toLocaleDateString()}`\r\n          },\r\n          fut: itemForUpdate ? itemForUpdate.fut : {\r\n               active: false,\r\n               date: ''\r\n          },\r\n          uat: itemForUpdate ? itemForUpdate.uat : {\r\n               active: false,\r\n               date: ''\r\n          },\r\n          preprod: itemForUpdate ? itemForUpdate.preprod : {\r\n               active: false,\r\n               date: ''\r\n          },\r\n          prod: itemForUpdate ? itemForUpdate.prod : {\r\n               active: false,\r\n               date: ''\r\n          },\r\n     });\r\n\r\n     useEffect(() => {\r\n          setLoading(false);\r\n     }, []);\r\n\r\n     const formik = useFormik({\r\n          initialValues: {\r\n               type: itemForUpdate ? itemForUpdate.type : 'Development',\r\n               ticketId: itemForUpdate ? itemForUpdate.ticketId : '',\r\n               name: itemForUpdate ? itemForUpdate.name : '',\r\n               branch: itemForUpdate ? itemForUpdate.branch : '',\r\n               currentEnv: itemForUpdate ? itemForUpdate.currentEnv : 0,\r\n               ...environments\r\n          },\r\n          onSubmit: values => {\r\n               if (itemForUpdate) {\r\n                    setLoading(true)\r\n                    updateWork(values, itemForUpdate.id)\r\n                         .then(res => {\r\n                              setLoading(false);\r\n                              formik.resetForm();\r\n                              props.closeModal(true)\r\n                         });\r\n               } else {\r\n                    setLoading(true)\r\n                    createWork(values)\r\n                         .then(res => {\r\n                              setLoading(false);\r\n                              formik.resetForm();\r\n                              props.closeModal(true)\r\n                         });\r\n               }\r\n\r\n          },\r\n          validationSchema: createWorkValidationShema,\r\n     });\r\n\r\n     const changeEnv = (key) => {\r\n          const data = environments;\r\n          const keys = Object.keys(environments);\r\n          const ind2 = keys.findIndex(item => item === key)\r\n          keys.map((mapKey, ind) => {\r\n               if (ind > ind2) {\r\n                    data[mapKey].active = false\r\n                    data[mapKey].date = '';\r\n               }\r\n               else if (!data[mapKey].active) {\r\n                    data[mapKey].active = true;\r\n                    data[mapKey].date = `${new Date().toISOString()}`;\r\n               }\r\n               formik.setFieldValue(\"currentEnv\", ind2 + 1);\r\n          });\r\n\r\n          setEnvironment({ ...data });\r\n     }\r\n\r\n\r\n     return (\r\n          <div>\r\n               <div className=\"content\">\r\n                    <Card className=\"container\">\r\n                         <div className=\"text-center mt-3\">\r\n                              <h3>Create Work</h3>\r\n                         </div>\r\n                         <CardBody>\r\n                              {\r\n                                   loading &&\r\n                                   <div class=\"spin-wrapper\">\r\n                                        <div class=\"spinner\">\r\n                                        </div>\r\n                                   </div>\r\n                              }\r\n\r\n                              {\r\n                                   !loading &&\r\n                                   <form onSubmit={formik.handleSubmit}>\r\n                                        <FormGroup>\r\n                                             <Label className=\"log-reg-label\" for=\"type\">Work Type</Label>\r\n                                             <Input\r\n                                                  autocomplete=\"off\"\r\n                                                  type=\"select\"\r\n                                                  name=\"type\"\r\n                                                  id=\"type\"\r\n                                                  onChange={formik.handleChange}\r\n                                                  value={formik.values.type}\r\n                                             >\r\n                                                  <option>Development</option>\r\n                                                  <option>Bug</option>\r\n                                             </Input>\r\n                                        </FormGroup>\r\n                                        <FormGroup>\r\n                                             <Label className=\"log-reg-label\" for=\"ticketId\">Ticket Id</Label>\r\n                                             <Input\r\n                                                  autocomplete=\"off\"\r\n                                                  id=\"ticketId\"\r\n                                                  name=\"ticketId\"\r\n                                                  type=\"ticketId\"\r\n                                                  onChange={formik.handleChange}\r\n                                                  value={formik.values.ticketId}\r\n                                             />\r\n                                        </FormGroup>\r\n                                        <FormGroup>\r\n                                             <Label className=\"log-reg-label\" for=\"name\">Work Name</Label>\r\n                                             <Input\r\n                                                  autocomplete=\"off\"\r\n                                                  id=\"name\"\r\n                                                  name=\"name\"\r\n                                                  type=\"name\"\r\n                                                  onChange={formik.handleChange}\r\n                                                  value={formik.values.name}\r\n                                             />\r\n                                        </FormGroup>\r\n                                        <FormGroup>\r\n                                             <Label className=\"log-reg-label\" for=\"branch\">Work Branch</Label>\r\n                                             <Input\r\n                                                  autocomplete=\"off\"\r\n                                                  id=\"branch\"\r\n                                                  name=\"branch\"\r\n                                                  type=\"branch\"\r\n                                                  onChange={formik.handleChange}\r\n                                                  value={formik.values.branch}\r\n                                             />\r\n                                        </FormGroup>\r\n                                        <Label className=\"log-reg-label\" for=\"branch\">Environments</Label>\r\n                                        <div className=\"d-flex justify-content-between\">\r\n                                             <FormGroup>\r\n                                                  <span style={{ textDecoration: \"underline\", color: \"blue\" }} href=\"#\" id=\"TooltipExample1\">\r\n                                                       <Button type=\"button\" onClick={() => changeEnv('dev')} className=\"btn-icon btn-rounded \" size=\"sm\"\r\n                                                            color={environments.dev.active === true ? \"success\" : \"danger\"}\r\n                                                       >\r\n                                                            <small>Dev</small>\r\n                                                       </Button>\r\n                                                  </span>\r\n                                             </FormGroup>\r\n                                             <FormGroup>\r\n                                                  <span style={{ textDecoration: \"underline\", color: \"blue\" }} href=\"#\" id=\"TooltipExample1\">\r\n                                                       <Button type=\"button\" onClick={() => changeEnv('fut')} className=\"btn-icon btn-rounded \" size=\"sm\"\r\n                                                            color={environments.fut.active === true ? \"success\" : \"danger\"}\r\n                                                       >\r\n                                                            <small>Fut</small>\r\n                                                       </Button>\r\n                                                  </span>\r\n                                             </FormGroup>\r\n\r\n                                             <FormGroup>\r\n                                                  <span style={{ textDecoration: \"underline\", color: \"blue\" }} href=\"#\" id=\"TooltipExample1\">\r\n                                                       <Button type=\"button\" onClick={() => changeEnv('uat')} className=\"btn-icon btn-rounded \" size=\"sm\"\r\n                                                            color={environments.uat.active === true ? \"success\" : \"danger\"}\r\n                                                       >\r\n                                                            <small>Uat</small>\r\n                                                       </Button>\r\n                                                  </span>\r\n                                             </FormGroup>\r\n\r\n                                             <FormGroup>\r\n                                                  <span style={{ textDecoration: \"underline\", color: \"blue\" }} href=\"#\" id=\"TooltipExample1\">\r\n                                                       <Button type=\"button\" onClick={() => changeEnv('preprod')} className=\"btn-icon btn-rounded \" size=\"sm\"\r\n                                                            color={environments.preprod.active === true ? \"success\" : \"danger\"}\r\n                                                       >\r\n                                                            <small>PRP</small>\r\n                                                       </Button>\r\n                                                  </span>\r\n                                             </FormGroup>\r\n\r\n                                             <FormGroup>\r\n                                                  <span style={{ textDecoration: \"underline\", color: \"blue\" }} href=\"#\" id=\"TooltipExample1\">\r\n                                                       <Button type=\"button\" onClick={() => changeEnv('prod')} className=\"btn-icon btn-rounded \" size=\"sm\"\r\n                                                            color={environments.prod.active === true ? \"success\" : \"danger\"}\r\n                                                       >\r\n                                                            <small>PRD</small>\r\n                                                       </Button>\r\n                                                  </span>\r\n                                             </FormGroup>\r\n\r\n                                        </div>\r\n                                        <div className=\"d-flex justify-content-between mt-4\">\r\n                                             <Button className=\"btn-rounded\" onClick={() => props.closeModal(true)} color=\"primary\" type=\"button\">\r\n                                                  Close\r\n                                             </Button>\r\n                                             <Button className=\"btn-rounded\" color=\"primary\" type=\"submit\">\r\n                                                  {itemForUpdate ? 'Update Item' : 'Add New'}\r\n                                             </Button>\r\n                                        </div>\r\n                                   </form>\r\n                              }\r\n\r\n                         </CardBody>\r\n                    </Card>\r\n\r\n               </div>\r\n          </div>\r\n     )\r\n}\r\n\r\nexport default CreateWork;\r\n","C:\\Users\\gizem.ay\\Documents\\Projects\\personal\\wa-app\\src\\services\\common.service.js",[],"C:\\Users\\gizem.ay\\Documents\\Projects\\personal\\wa-app\\src\\assets\\validations\\createWorkValidation.js",[],"C:\\Users\\gizem.ay\\Documents\\Projects\\personal\\wa-app\\src\\services\\fileService.js",[],{"ruleId":"149","severity":1,"message":"150","line":11,"column":8,"nodeType":"151","endLine":11,"endColumn":10,"suggestions":"152"},{"ruleId":"153","severity":1,"message":"154","line":16,"column":47,"nodeType":"155","messageId":"156","endLine":16,"endColumn":53},{"ruleId":"153","severity":1,"message":"157","line":16,"column":55,"nodeType":"155","messageId":"156","endLine":16,"endColumn":62},{"ruleId":"153","severity":1,"message":"158","line":4,"column":33,"nodeType":"155","messageId":"156","endLine":4,"endColumn":44},{"ruleId":"153","severity":1,"message":"159","line":14,"column":10,"nodeType":"155","messageId":"156","endLine":14,"endColumn":12},{"ruleId":"149","severity":1,"message":"160","line":47,"column":9,"nodeType":"151","endLine":47,"endColumn":18,"suggestions":"161"},{"ruleId":"153","severity":1,"message":"162","line":35,"column":10,"nodeType":"155","messageId":"156","endLine":35,"endColumn":16},{"ruleId":"163","replacedBy":"164"},{"ruleId":"165","replacedBy":"166"},{"ruleId":"153","severity":1,"message":"167","line":14,"column":54,"nodeType":"155","messageId":"156","endLine":14,"endColumn":62},{"ruleId":"149","severity":1,"message":"168","line":44,"column":9,"nodeType":"151","endLine":44,"endColumn":11,"suggestions":"169"},{"ruleId":"170","severity":1,"message":"171","line":87,"column":34,"nodeType":"172","messageId":"173","endLine":87,"endColumn":36},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'activeUser'. Either include it or remove the dependency array.","ArrayExpression",["174"],"no-unused-vars","'errors' is assigned a value but never used.","Identifier","unusedVar","'touched' is assigned a value but never used.","'ButtonGroup' is defined but never used.","'tr' is defined but never used.","React Hook useEffect has a missing dependency: 'getItems'. Either include it or remove the dependency array.",["175"],"'logout' is defined but never used.","no-native-reassign",["176"],"no-negated-in-lhs",["177"],"'CardText' is defined but never used.","React Hook useEffect has a missing dependency: 'getFiles'. Either include it or remove the dependency array.",["178"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside",{"desc":"179","fix":"180"},{"desc":"181","fix":"182"},"no-global-assign","no-unsafe-negation",{"desc":"183","fix":"184"},"Update the dependencies array to be: [activeUser]",{"range":"185","text":"186"},"Update the dependencies array to be: [filters, getItems]",{"range":"187","text":"188"},"Update the dependencies array to be: [getFiles]",{"range":"189","text":"190"},[365,367],"[activeUser]",[1765,1774],"[filters, getItems]",[1555,1557],"[getFiles]"]